def VAR_TEST = "--help"

pipeline {
  agent any
  /*agent {
      node {
          label "agent node label..."
      }
  }*/
  // triggers{
  //     cron("")
  // }
  environment {
      token = credentials("token")
      httpBin = "git clone https://${token}@codeup.aliyun.com/vipex/go-bin.git -b dev . 2>&1 > /dev/null"
      TZ = "Asia/Shanghai"
  }
  parameters {
      // https://www.jenkins.io/doc/book/pipeline/syntax/#parameters
      // string|text|booleanParam|choice|password(name: "type", defaultValue: "type"|""|["","",""]|true/false, description: "") // ${params.NAME} 取值
      // http://127.0.0.1:8080/job/<job>/directive-generator/
      string defaultValue: "${VAR_TEST}", description: "eg: --help", name: "cmd_flags", trim: true
      // password defaultValue: '...', description: '...', name: 'userPsw' // failed
  }
  options {
      // disableConcurrentBuilds()
      skipDefaultCheckout()
      // timeout(time: 1, unit: "MINUTES")
      timestamps()
      ansiColor("xterm")
  }
  stages {
    stage("run go-web app") {
      steps {
        script {
          sh """${httpBin};\
      /bin/sh go-web/wx ${cmd_flags};\
          cd .."""
        }
      }
    }
  }
  post {
      always {
      cleanWs()
      consokePrf("workspace already clearn( rm -rf `pwd` ) in exec finished !!!") // print
      consokePrf("finished !")
      }
  }
}

def consokePrf(cntShowVal) {
  def dividingMask = "***************************"
  echo "\033[34m#-#\033[0m \033[35m${dividingMask}\033[0m >>> \
  \033[33m${cntShowVal}\033[0m \
  <<< \033[35m${dividingMask}\033[0m \033[34m#-#\033[0m"
}